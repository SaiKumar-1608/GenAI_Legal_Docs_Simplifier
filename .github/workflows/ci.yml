# .github/workflows/ci.yml
# CI for LexiClear (server + frontend)
# Runs on push and pull_request, executes tests and builds for both packages.

name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  server:
    name: Server - test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules (server)
        uses: actions/cache@v4
        with:
          path: server/node_modules
          key: ${{ runner.os }}-server-node-${{ hashFiles('server/package-lock.json', 'server/package.json') }}
          restore-keys: |
            ${{ runner.os }}-server-node-

      - name: Install dependencies (server)
        run: npm ci

      - name: Run server tests
        run: npm test --silent

      - name: Lint server (if eslint configured)
        if: always()
        run: |
          if [ -f .eslintrc.js ] || [ -f .eslintrc.json ]; then
            npx eslint . || true
          else
            echo "No ESLint config found - skipping lint"
          fi

  frontend:
    name: Frontend - test & build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node modules (frontend)
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-node-${{ hashFiles('frontend/package-lock.json', 'frontend/package.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-node-

      - name: Install dependencies (frontend)
        run: npm ci

      - name: Run frontend tests
        run: npm test --silent

      - name: Build frontend
        run: npm run build

  integration:
    name: Integration smoke (start server & run a basic HTTP check)
    runs-on: ubuntu-latest
    needs: [ server, frontend ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Start server in background
        run: |
          cd server
          npm ci
          nohup npm run dev &> server.log &
          sleep 3
      - name: Smoke test server health endpoint
        run: |
          if curl -fsS http://localhost:4000/health; then
            echo "Health check OK"
          else
            echo "Health check failed (endpoint may not exist). Attempting basic /api/simplify POST check..."
            # Try a basic /api/simplify call using sample text to ensure API responds.
            curl -sS -X POST http://localhost:4000/api/simplify -H "Content-Type: application/json" \
              -d '{"text":"This is a short test contract. Termination: 30 days notice."}' || true
          fi
